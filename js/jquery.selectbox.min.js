/* jQuery SelectBox Styler v1.0.1 | (c) Dimox | http://dimox.name/styling-select-boxes-using-jquery-css/ */
(function ($) {
    $.fn.selectbox = function (color) {
        $(this).each(function () {
            var select = $(this);
            if (select.prev('span.selectbox').length < 1) {
                function doSelect() {
                    var option = select.find('option'), optionSelectedColor;
                    var optionSelected = option.filter(':selected');
                    var optionText = option.filter(':first').text();
                    if (optionSelected.length) {
                        optionSelectedColor = optionSelected;
                        optionText = optionSelected.text();
                    }
                    else {
                        optionSelectedColor = option.filter(':first');
                    } 
                    var ddlist = '';
                    for (i = 0; i < option.length; i++) {
                        var selected = '';
                        var disabled = ' class="disabled"';
                        var colorStyle = (color === true) ? '<div class="color-item border-r" style="background-color: ' + option.eq(i).data('color') + '"></div>' : '';
                        if (option.eq(i).is(':selected')) selected = ' class="selected sel"';
                        if (option.eq(i).is(':disabled')) selected = disabled;
                        
                        ddlist += '<li' + selected + '>' + colorStyle + option.eq(i).text() + '</li>';         
                    }
                    var colorFirstSelector = (color === true) ? '<div class="color-item border-r" style="background-color: ' + optionSelectedColor.data('color') + '"></div>' : '';
                    var selectbox = $('<span class="selectbox  border-r" style="display:inline-block;position:relative">' + '<div class="select border-r" style="float:left;position:relative;"><div class="text">' + colorFirstSelector + optionText + '</div>' + '<b class="trigger"><i class="arrow"></i></b>' + '</div>' + '<div class="dropdown border-r" style="position:absolute;z-index:9999;list-style:none">' + '<div class="ar-top"></div>' + '<ul>' + ddlist + '</ul>' + '</div>' + '</span>');
                    select.before(selectbox).css({
                        position: 'absolute',
                        top: -9999,
                        left: -9999
                    });
                    var divSelect = selectbox.find('div.select');
                    var divText = selectbox.find('div.text');
                    var dropdown = selectbox.find('div.dropdown');
                    var li = dropdown.find('li');
                    var selectHeight = selectbox.outerHeight();
                    if (dropdown.css('left') == 'auto') dropdown.css({
                        left: 0
                    });
                    if (dropdown.css('top') == 'auto') dropdown.css({
                        top: selectHeight
                    });
                    var liHeight = li.outerHeight();
                    var position = dropdown.css('top');
                    dropdown.hide();
                    divSelect.click(function () {
                        var topOffset = selectbox.offset().top;
                        var bottomOffset = $(window).height() - selectHeight - (topOffset - $(window).scrollTop());
                        if (bottomOffset < 0 || bottomOffset < liHeight * 6) {
                            dropdown.height('auto').css({
                                top: 'auto',
                                bottom: position
                            }).addClass('topSelect');
                            if (dropdown.outerHeight() > topOffset - $(window).scrollTop() - 20) {
                                dropdown.height(Math.floor((topOffset - $(window).scrollTop() - 20) / liHeight) * liHeight);
                            }
                        } else if (bottomOffset > liHeight * 6) {
                            dropdown.height('auto').css({
                                bottom: 'auto',
                                top: position
                            }).removeClass('topSelect');
                            if (dropdown.outerHeight() > bottomOffset - 20) {
                                dropdown.height(Math.floor((bottomOffset - 20) / liHeight) * liHeight);
                            }
                        }
                        $('span.selectbox').css({
                            zIndex: 10
                        }).removeClass('focused').removeClass('active');
                        selectbox.css({
                            zIndex: 20
                        }).addClass('active');
                        if (dropdown.is(':hidden')) {
                            $('div.dropdown:visible').hide();
                            dropdown.show();
                        } else {
                            $('span.selectbox').removeClass('active').css({
                            zIndex: 10
                        });
                            dropdown.hide();
                            
                        }
                        return false;
                    });
                    li.hover(function () {
                        $(this).siblings().removeClass('selected');
                    });
                    var selectedText = li.filter('.selected').text();
                    li.filter(':not(.disabled)').click(function () {
                        var liText = (color === true) ? $(this).html() : $(this).text();
                        if (selectedText != liText) {
                            $(this).addClass('selected sel').siblings().removeClass('selected sel');
                            option.removeAttr('selected').eq($(this).index()).attr('selected', true);
                            selectedText = liText;
                            divText.html(liText);
                             if(color === true){
                                divText.html(liText);
                            }
                            else{
                                divText.text(liText);
                            }
                            select.change();
                        }
                        dropdown.hide();
                    });
                    dropdown.mouseout(function () {
                        dropdown.find('li.sel').addClass('selected');
                    });
                    select.focus(function () {
                        $('span.selectbox').removeClass('focused');
                        selectbox.addClass('focused');
                    }).keyup(function () {
                        divText.text(option.filter(':selected').text());
                        li.removeClass('selected sel').eq(option.filter(':selected').index()).addClass('selected sel');
                    });
                    $(document).on('click', function (e) {
                        if (!$(e.target).parents().hasClass('selectbox')) {
                            dropdown.hide().find('li.sel').addClass('selected');
                            selectbox.removeClass('focused');
                        }
                        $('.selectbox').removeClass('active').css({
                            zIndex: 10
                        });
                    });
                }
                doSelect();
                select.on('refresh', function () {
                    select.prev().remove();
                    doSelect();
                })
            }
        });
    }
})(jQuery)